Smart Parking Lot Manager
#include <iostream>
using namespace std;

int main() {
    const int maxCapacity = 300;
    int totalSlots, numCar;

    cout << "Enter total parking slots available: ";
    cin >> totalSlots;
    cout << "Enter number of cars currently parked: ";
    cin >> numCar;

    if (totalSlots > maxCapacity || numCar > maxCapacity) {
        cout << "Error! Maximum capacity reached!\n";
    }
    else if (numCar > totalSlots) {
        cout << "Error! Number of cars cannot exceed total slots!\n";
    }
    else {
        if (numCar == totalSlots) {
            cout << "Parking Full – Redirect Cars\n";
        }
        else {
            int remainSlots = totalSlots - numCar;
            cout << "Slots Available: " << remainSlots << "\n";
            if ((double)numCar / totalSlots > 0.8) {
                cout << "High Occupancy Warning\n";
            }
        }
    }
    return 0;
}

#include <iostream>
using namespace std;

int main() {
    int moisture, time;
    double water;
    
    cout << "Enter soil moisture percentage (0-100): ";
    cin >> moisture;
    
    cout << "Enter time of day (0-23): ";
    cin >> time;
    
    if (moisture < 20) {
        cout << "Critical Moisture Level! Immediate Irrigation Needed";
        water = (40 - moisture) * 0.5;
        cout << "Water needed: " << water << " liters" ;
    }
    else if (moisture < 40) {
        if ((time >= 5 && time <= 8) || (time >= 17 && time <= 20)) {
            cout << "Irrigation ON" << endl;
        }
        else {
            cout << "Irrigation OFF - Not optimal time";
        }
        water = (40 - moisture) * 0.5;
        cout << "Water needed: " << water << " liters";
    }
    else {
        cout << "Soil Moisture Optimal – Irrigation OFF";
    }
    
    return 0;
}



